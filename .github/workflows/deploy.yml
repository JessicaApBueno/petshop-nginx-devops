name: CI/CD - Build, Push e Deploy (GCP Identity)

on:
  push:
    branches:
      - main 

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    # Define variáveis de ambiente globais
    env:
      IMAGE_REPO: ${{ secrets.DOCKER_USERNAME }}/petshop-static-nginx:latest
      
    steps:
    - name: Checkout do Código
      uses: actions/checkout@v3
      
    # ------------------------------------------------------------------
    # --- FASE CI (Build e Push da Imagem) ---
    # ------------------------------------------------------------------
    - name: Login no Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }} 
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build, Tag e Push da Imagem NGINX Estática
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.IMAGE_REPO }}
        
    # ------------------------------------------------------------------
    # --- FASE CD (Deploy via Ansible e GCP Identity) ---
    # ------------------------------------------------------------------

    - name: 1. Configurar Credenciais GCP (Para autenticar o Ansible)
      # Usa o arquivo JSON da conta de serviço para autenticar o Action no GCP
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    - name: 2. Instalar gcloud, Ansible e Módulo Docker
      run: |
        # Instala ferramentas necessárias no runner
        sudo apt-get update
        sudo apt-get install -y ansible google-cloud-cli python3-pip
        pip install docker apache-libcloud
        
    - name: 3. Executar o Playbook Ansible (Deploy Final)
      # A variável VM_IP não é mais necessária aqui, pois não usamos mais o IP.
      # env:
      #   VM_IP: ${{ needs.terraform.outputs.vm_ip }}
      run: |
        echo "Instalando a coleção Ansible para Google Cloud..."
        ansible-galaxy collection install google.cloud

       echo "Executando o Playbook..."
       ansible-playbook -i hosts deploy-cd.yml

        # 1. Substitui o placeholder '{{ vm_ip }}' no inventário com o IP real da Secret
        sed -i "s/{{ vm_ip }}/${{ secrets.VM_IP_ADDRESS }}/g" inventory.ini
        
        # 2. Roda o Playbook, usando gcloud como ProxyCommand para autenticação (Sem chave SSH)
        ansible-playbook -i inventory.ini deploy-cd.yml \
          -e "image_name=${{ env.IMAGE_REPO }}" \
          -e "docker_hub_pat=${{ secrets.DOCKER_PASSWORD }}" \
          -e "docker_hub_user=${{ secrets.DOCKER_USERNAME }}" \
          --limit petshop-vm \
          --ssh-common-args="-o ProxyCommand='gcloud compute ssh %r@%h --zone us-central1-a --command 'exit' --ssh-flag=-W %h:%p'"

