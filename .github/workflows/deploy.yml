# Nome do Workflow
name: CI/CD - Deploy com Ansible na VM do GCP

# Gatilho (CORRIGIDO): Executar em push para a 'main' OU quando um PR for aberto para a 'main'
on:
  # Gatilho para quando o código for merged na branch principal
  push:
    branches:
      - main
  # Gatilho SEGURO para Pull Requests, que tem acesso aos secrets
  pull_request_target:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  deploy-to-gcp-vm:
    name: Deploy com Ansible no GCP
    runs-on: ubuntu-latest

    steps:
      # ETAPA 1: FAZER O CHECKOUT DO CÓDIGO
      # Importante: Com 'pull_request_target', fazemos o checkout do código da branch base (main)
      # que é seguro e contém a versão confiável do workflow.
      - name: Checkout do código do repositório
        uses: actions/checkout@v4

      # ETAPA 2: AUTENTICAÇÃO COM O GOOGLE CLOUD
      - name: Autenticação com Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      # ETAPA 3: CONFIGURAÇÃO DO SDK DO GCLOUD
      - name: Configuração do gcloud CLI
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: 'storied-radius-470316-f6'

      # ETAPA 4: INSTALAÇÃO DO ANSIBLE E DA COLEÇÃO GCP
      - name: Instalar Ansible e a coleção GCP
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install --upgrade pip
          pip3 install ansible google-auth requests
          ansible-galaxy collection install google.cloud

      # ETAPA 5: EXECUÇÃO DO PLAYBOOK
      - name: Executar o Playbook Ansible
        run: |
          # !! IMPORTANTE: Altere 'playbook.yml' se o seu arquivo tiver outro nome !!
          ansible-playbook -i inventory.ini deploy-cd.yml
