name: Deploy Infraestrutura e Aplicação (Terraform + Ansible)

on:
  push:
    branches:
      - main
  workflow_dispatch: # Permite iniciar o workflow manualmente na aba "Actions" do GitHub

# Permissões para autenticação segura com o Google Cloud via OIDC
permissions:
  contents: 'read'
  id-token: 'write'

jobs:
  # --- JOB 1: PROVISIONAR A INFRAESTRUTURA ---
  terraform:
    name: 'Provisionar Infraestrutura (Terraform)'
    runs-on: ubuntu-latest
    
    outputs:
      vm_ip: ${{ steps.apply.outputs.vm_ip_address }} # Exporta o IP para uso opcional

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Autenticar com Google Cloud
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          # Substitua pelos seus valores do Workload Identity Federation
          workload_identity_provider: 'projects/1049175473029/locations/global/workloadIdentityPools/SEU_POOL_ID/providers/SEU_PROVIDER_ID'
          service_account: '1049175473029-compute@developer.gserviceaccount.com' # Ex: terraform-admin@seu-projeto.iam.gserviceaccount.com

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Apply
        id: apply
        run: terraform apply --auto-approve

  # --- JOB 2: CONFIGURAR A VM COM ANSIBLE ---
  ansible:
    name: 'Configurar VM (Ansible)'
    runs-on: ubuntu-latest
    needs: terraform # Garante que este job só rode após o sucesso do job 'terraform'

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Autenticar com Google Cloud
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          # Use os mesmos valores do job anterior
          workload_identity_provider: 'projects/1049175473029/locations/global/workloadIdentityPools/SEU_POOL_ID/providers/SEU_PROVIDER_ID'
          service_account: '1049175473029-compute@developer.gserviceaccount.com'

      - name: Setup de Ferramentas (gcloud, Python, Ansible)
        run: |
          sudo apt-get update
          # Instala o gcloud CLI (nome corrigido)
          sudo apt-get install -y google-cloud-cli
          # Instala o Ansible
          sudo apt-get install -y ansible

      - name: Executar o Playbook Ansible
        run: |
          echo "Instalando a coleção Ansible para Google Cloud..."
          # Instala o plugin de conexão gcp_compute
          ansible-galaxy collection install google.cloud
          
          echo "Executando o Playbook..."
          ansible-playbook -i hosts deploy-cd.yml
