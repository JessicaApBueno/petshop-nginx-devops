name: CI/CD - Build, Push e Deploy (Ansible)

on:
  push:
    branches:
      - main 

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    # Define variáveis de ambiente globais para o job
    env:
      IMAGE_REPO: ${{ secrets.DOCKER_USERNAME }}/petshop-static-nginx:latest
      
    steps:
    - name: Checkout do Código
      uses: actions/checkout@v3
      
    # ------------------------------------------------------------------
    # --- FASE CI (Build e Push da Imagem) ---
    # ------------------------------------------------------------------
    - name: Login no Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }} 
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build, Tag e Push da Imagem NGINX Estática
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.IMAGE_REPO }}
        
    # ------------------------------------------------------------------
    # --- FASE CD (Deploy via Ansible) ---
    # ------------------------------------------------------------------

    - name: 1. Configurar Conexão SSH para Ansible
      # Este passo usa a chave privada armazenada na Secret
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        
    - name: 2. Instalar Ansible e Módulo Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y ansible
        # Instala o módulo Python necessário para o Ansible interagir com o Docker
        pip install docker

    - name: 3. Executar o Playbook Ansible (Deploy)
      run: |
        echo "Preparando inventário com IP: ${{ secrets.VM_IP_ADDRESS }}"
        # Substitui o placeholder '{{ vm_ip }}' no inventory.ini com o IP real da VM
        sed -i "s/{{ vm_ip }}/${{ secrets.VM_IP_ADDRESS }}/g" inventory.ini
        
        # Roda o Playbook deploy-cd.yml, passando as variáveis de credencial e imagem
        ansible-playbook -i inventory.ini deploy-cd.yml \
          -e "image_name=${{ env.IMAGE_REPO }}" \
          -e "docker_hub_pat=${{ secrets.DOCKER_PASSWORD }}" \
          -e "docker_hub_user=${{ secrets.DOCKER_USERNAME }}"
